name: 'Terraform GitHub Actions'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Cache Terraform modules
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/provider_versions.tf', '.terraform-version') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init
        run: terraform init -upgrade
        working-directory: ./terraform

      - name: Terraform Format
        run: terraform fmt -check -diff -recursive
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          severity: error

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: TFLint
        run: tflint
        working-directory: ./terraform

      - name: Setup Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ./terraform
          framework: terraform
          enable_telemetry: false
          skip_check: > 
            CKV_AWS_192,  # IAM policies with wildcard actions
            CKV_AWS_241,  # Kinesis Firehose CMK encryption (not needed for test)
            CKV_AWS_240,  # Kinesis Firehose encryption (test environment)
            CKV_AWS_2,    # ALB should use HTTPS, handled manually
            CKV_AWS_378,  # ALB should not use HTTP, manual review done
            CKV_AWS_382,  # Allowing egress in Security Group
            CKV_AWS_23,   # Security Group rules without descriptions
            CKV_AWS_145,  # S3 encryption already set up in separate files
            CKV2_AWS_6,   # S3 public access block, already configured
            CKV_AWS_21,   # S3 versioning enabled, verified separately
            CKV_AWS_157,  # RDS Multi-AZ, not required for test
            CKV_AWS_232,  # NACL allowing SSH access (test environment)
            CKV_AWS_231   # NACL allowing RDP access (test environment)

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        working-directory: ./terraform

      - name: Terraform Plan Output Annotations
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform plan -no-color"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = await exec.getExecOutput(process.env.PLAN, [], {cwd: './terraform'});
            if (output.exitCode !== 0) {
              core.setFailed(output.stderr);
            } else if (output.stdout.length > 0) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "`terraform\n" + output.stdout + "\n`"
              });
            }