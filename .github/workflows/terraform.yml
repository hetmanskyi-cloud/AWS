name: 'Terraform GitHub Actions'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Cache Terraform modules
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/provider_versions.tf', '.terraform-version') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init
        run: terraform init -upgrade
        working-directory: ./terraform

      - name: Terraform Format
        run: terraform fmt -check -diff -recursive
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          severity: error

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: TFLint
        run: tflint
        working-directory: ./terraform

      - name: Install tfsec
        run: |
          curl -sSL https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
      
      - name: Run tfsec (console output, soft-fail)
        run: tfsec ./terraform || true
      

      - name: Install KICS
        run: |
          curl -sfL https://raw.githubusercontent.com/Checkmarx/kics/master/scripts/install.sh | bash            

      - name: Run KICS (console output, soft-fail)
        run: |
          kics scan --path ./terraform --report-formats console || true        